datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model List {
  accessPermissions AccessPermission[]
  createdAt         DateTime           @default(now())
  description       String?
  expiresAt         DateTime?
  id                String             @id @default(cuid())
  name              String?
  privacy           EnumListPrivacy?
  updatedAt         DateTime           @updatedAt
  user              User?              @relation(fields: [userId], references: [id])
  userId            String?
}

model Group {
  accessPermissions AccessPermission[]
  createdAt         DateTime           @default(now())
  description       String?
  id                String             @id @default(cuid())
  invitations       Invitation[]
  name              String?
  owner             String?
  updatedAt         DateTime           @updatedAt
}

model Invitation {
  createdAt DateTime              @default(now())
  email     String?
  group     Group?                @relation(fields: [groupId], references: [id])
  groupId   String?
  id        String                @id @default(cuid())
  status    EnumInvitationStatus?
  updatedAt DateTime              @updatedAt
}

model AccessPermission {
  createdAt  DateTime                        @default(now())
  group      Group?                          @relation(fields: [groupId], references: [id])
  groupId    String?
  id         String                          @id @default(cuid())
  list       List?                           @relation(fields: [listId], references: [id])
  listId     String?
  permission EnumAccessPermissionPermission?
  updatedAt  DateTime                        @updatedAt
  user       User?                           @relation(fields: [userId], references: [id])
  userId     String?
}

model User {
  accessPermissions AccessPermission[]
  createdAt         DateTime           @default(now())
  email             String?            @unique
  firstName         String?
  id                String             @id @default(cuid())
  lastName          String?
  lists             List[]
  password          String
  roles             Json
  updatedAt         DateTime           @updatedAt
  username          String             @unique
}

enum EnumListPrivacy {
  Option1
}

enum EnumInvitationStatus {
  Option1
}

enum EnumAccessPermissionPermission {
  Option1
}
